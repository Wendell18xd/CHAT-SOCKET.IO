{"version":3,"sources":["types/types.js","context/chat/ChatReducer.js","context/chat/ChatContext.js","helpers/fetch.js","auth/AuthContext.js","context/SocketContext.js","hooks/useSocket.js","helpers/scrollToBotton.js","components/ChatSelect.js","components/Searchbox.js","components/SidebarChatItem.js","components/Sidebar.js","components/InboxPeople.js","helpers/horaMes.js","components/IncomingMessage.js","components/OutgoingMessages.js","components/SendMessage.js","components/Messages.js","pages/ChatPage.js","pages/LoginPage.js","pages/RegisterPage.js","router/AuthRouter.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","ChatApp.js","index.js"],"names":["types","chatReducer","state","action","type","usuarios","payload","chatActivo","mensajes","de","para","uid","ChatContext","createContext","initialState","ChatProvider","children","useReducer","chatState","dispatch","Provider","value","baseURL","fetchSinToken","endpoint","data","a","method","url","fetch","resp","json","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","AuthContext","checking","logged","name","email","AuthProvider","useState","auth","setAuth","useContext","login","password","ok","setItem","usuario","nombre","register","verificaToken","useCallback","logout","removeItem","SocketContext","SocketProvider","serverPath","socket","setSocket","online","setOnline","conectarSocket","socketTemp","io","connect","transports","autoConnect","forceNew","query","desconectarSocket","disconnect","useEffect","connected","on","useSocket","id","animateScroll","scrollToBottom","containerId","duration","document","querySelector","focus","ChatSelect","className","Searchbox","onClick","SidebarChatItem","src","alt","Sidebar","filter","map","InboxPeople","horaMes","fecha","moment","format","IncomingMessage","msg","mensaje","createdAt","OutgoingMessages","SendMessage","setMensaje","onSubmit","e","preventDefault","length","emit","autoComplete","placeholder","onChange","target","Messages","_id","ChatPage","LoginPage","rememberme","form","setForm","onsubmit","Swal","fire","checked","readOnly","to","disabled","RegisterPage","AuthRouter","exact","path","component","PrivatecRoute","isAuthenticated","Component","rest","props","PublicRoute","AppRouter","locale","ChatApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.9b81503a.chunk.js","sourcesContent":["export const types = {\r\n  usuariosCargados: \"[Chat] Usuarios cargados\",\r\n  activarChat: \"[Chat] Activar chat\",\r\n  nuevoMensaje: \"[Chat] Nuevo mensaje\",\r\n  cargarMensajes: \"[Chat] Cargar Mensajes\",\r\n  cerrarSesion: \"[Chat] Cerrar sesion\",\r\n};\r\n","import { types } from \"../../types/types\";\r\n\r\nexport const chatReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case types.usuariosCargados:\r\n      return {\r\n        ...state,\r\n        usuarios: [...action.payload],\r\n      };\r\n    case types.activarChat:\r\n      if (state.chatActivo === action.payload) return state;\r\n\r\n      return {\r\n        ...state,\r\n        chatActivo: action.payload,\r\n        mensajes: [],\r\n      };\r\n    case types.nuevoMensaje:\r\n      if (\r\n        state.chatActivo === action.payload.de ||\r\n        state.chatActivo === action.payload.para\r\n      ) {\r\n        return {\r\n          ...state,\r\n          mensajes: [...state.mensajes, action.payload],\r\n        };\r\n      } else {\r\n        return state;\r\n      }\r\n    case types.cargarMensajes:\r\n      return {\r\n        ...state,\r\n        mensajes: [...action.payload],\r\n      };\r\n\r\n    case types.cerrarSesion:\r\n      return {\r\n        uid: \"\",\r\n        chatActivo: null,\r\n        usuarios: [],\r\n        mensajes: [],\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useReducer } from \"react\";\r\nimport { createContext } from \"react\";\r\nimport { chatReducer } from \"./ChatReducer\";\r\n\r\nexport const ChatContext = createContext();\r\n\r\nconst initialState = {\r\n  uid: \"\",\r\n  chatActivo: null, //UID del usuario al que quiero enviar mensaje\r\n  usuarios: [], //Todos los usuarios\r\n  mensajes: [], //el chat seleccionado\r\n};\r\n\r\nexport const ChatProvider = ({ children }) => {\r\n  const [chatState, dispatch] = useReducer(chatReducer, initialState);\r\n\r\n  return (\r\n    <ChatContext.Provider value={{ chatState, dispatch }}>\r\n      {children}\r\n    </ChatContext.Provider>\r\n  );\r\n};\r\n","const baseURL = \"https://chat-server-socketio-wendell.herokuapp.com/api\";\r\n\r\nexport const fetchSinToken = async (endpoint, data, method = \"GET\") => {\r\n  const url = `${baseURL}/${endpoint}`;\r\n\r\n  if (method === \"GET\") {\r\n    const resp = await fetch(url);\r\n    return await resp.json();\r\n  } else {\r\n    const resp = await fetch(url, {\r\n      method,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n    return await resp.json();\r\n  }\r\n};\r\n\r\nexport const fetchConToken = async (endpoint, data, method = \"GET\") => {\r\n  const url = `${baseURL}/${endpoint}`;\r\n  const token = localStorage.getItem(\"token\") || \"\";\r\n\r\n  if (method === \"GET\") {\r\n    const resp = await fetch(url, {\r\n      headers: {\r\n        \"x-token\": token,\r\n      },\r\n    });\r\n    return await resp.json();\r\n  } else {\r\n    const resp = await fetch(url, {\r\n      method,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-token\": token,\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n    return await resp.json();\r\n  }\r\n};\r\n","import { createContext, useCallback, useContext, useState } from \"react\";\r\nimport { ChatContext } from \"../context/chat/ChatContext\";\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nconst initialState = {\r\n  uid: null,\r\n  checking: true,\r\n  logged: false,\r\n  name: null,\r\n  email: null,\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [auth, setAuth] = useState(initialState);\r\n  const { dispatch } = useContext(ChatContext);\r\n\r\n  const login = async (email, password) => {\r\n    const resp = await fetchSinToken(\"login\", { email, password }, \"POST\");\r\n    if (resp.ok) {\r\n      localStorage.setItem(\"token\", resp.token);\r\n\r\n      const { usuario } = resp;\r\n\r\n      setAuth({\r\n        uid: usuario.uid,\r\n        checking: false,\r\n        logged: true,\r\n        name: usuario.nombre,\r\n        email: usuario.email,\r\n      });\r\n    }\r\n\r\n    return resp.ok;\r\n  };\r\n\r\n  const register = async (nombre, email, password) => {\r\n    const resp = await fetchSinToken(\r\n      \"login/new\",\r\n      { nombre, email, password },\r\n      \"POST\"\r\n    );\r\n    if (resp.ok) {\r\n      localStorage.setItem(\"token\", resp.token);\r\n\r\n      const { usuario } = resp;\r\n\r\n      setAuth({\r\n        uid: usuario.uid,\r\n        checking: false,\r\n        logged: true,\r\n        name: usuario.nombre,\r\n        email: usuario.email,\r\n      });\r\n    }\r\n\r\n    return resp.ok;\r\n  };\r\n\r\n  const verificaToken = useCallback(async () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    //Si el token no existe\r\n    if (!token) {\r\n      setAuth({\r\n        uid: null,\r\n        checking: false,\r\n        logged: false,\r\n        name: null,\r\n        email: null,\r\n      });\r\n      return false;\r\n    }\r\n\r\n    const resp = await fetchConToken(\"login/renew\");\r\n    if (resp.ok) {\r\n      localStorage.setItem(\"token\", resp.token);\r\n\r\n      const { usuario } = resp;\r\n\r\n      setAuth({\r\n        uid: usuario.uid,\r\n        checking: false,\r\n        logged: true,\r\n        name: usuario.nombre,\r\n        email: usuario.email,\r\n      });\r\n\r\n      return true;\r\n    } else {\r\n      setAuth({\r\n        uid: null,\r\n        checking: false,\r\n        logged: false,\r\n        name: null,\r\n        email: null,\r\n      });\r\n\r\n      return false;\r\n    }\r\n  }, []);\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem(\"token\");\r\n\r\n    dispatch({\r\n      type: types.cerrarSesion,\r\n    });\r\n\r\n    setAuth({\r\n      checking: false,\r\n      logged: false,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{ auth, login, register, verificaToken, logout }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n","import React, { useContext, useEffect, createContext } from \"react\";\r\nimport { AuthContext } from \"../auth/AuthContext\";\r\nimport { ChatContext } from \"./chat/ChatContext\";\r\nimport { useSocket } from \"../hooks/useSocket\";\r\nimport { types } from \"../types/types\";\r\nimport { scrollToBottonAnimated } from \"../helpers/scrollToBotton\";\r\n\r\nexport const SocketContext = createContext();\r\n\r\nexport const SocketProvider = ({ children }) => {\r\n  const { socket, online, conectarSocket, desconectarSocket } = useSocket(\r\n    \"https://chat-server-socketio-wendell.herokuapp.com/\"\r\n  );\r\n  const { auth } = useContext(AuthContext);\r\n  const { dispatch } = useContext(ChatContext);\r\n\r\n  useEffect(() => {\r\n    if (auth.logged) {\r\n      conectarSocket();\r\n    }\r\n  }, [auth, conectarSocket]);\r\n\r\n  useEffect(() => {\r\n    if (!auth.logged) {\r\n      desconectarSocket();\r\n    }\r\n  }, [auth, desconectarSocket]);\r\n\r\n  //Escuchar los cambios en los usuarios conectados\r\n  useEffect(() => {\r\n    socket?.on(\"lista-usuarios\", (usuarios) => {\r\n      dispatch({\r\n        type: types.usuariosCargados,\r\n        payload: usuarios,\r\n      });\r\n    });\r\n  }, [socket, dispatch]);\r\n\r\n  useEffect(() => {\r\n    socket?.on(\"mensaje-personal\", (mensajes) => {\r\n      dispatch({\r\n        type: types.nuevoMensaje,\r\n        payload: mensajes,\r\n      });\r\n\r\n      scrollToBottonAnimated(\"mensajes\");\r\n      document.querySelector(\"#sendMessages\").focus();\r\n    });\r\n  }, [socket, dispatch]);\r\n\r\n  return (\r\n    <SocketContext.Provider value={{ socket, online }}>\r\n      {children}\r\n    </SocketContext.Provider>\r\n  );\r\n};\r\n","import { useCallback, useEffect, useState } from \"react\";\r\nimport io from \"socket.io-client\";\r\n\r\nexport const useSocket = (serverPath) => {\r\n  const [socket, setSocket] = useState(null);\r\n  const [online, setOnline] = useState(false);\r\n\r\n  const conectarSocket = useCallback(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    const socketTemp = io.connect(serverPath, {\r\n      transports: [\"websocket\"],\r\n      autoConnect: true,\r\n      forceNew: true,\r\n      query: {\r\n        \"x-token\": token,\r\n      },\r\n    });\r\n    setSocket(socketTemp);\r\n  }, [serverPath]);\r\n\r\n  const desconectarSocket = useCallback(() => {\r\n    socket?.disconnect();\r\n  }, [socket]);\r\n\r\n  useEffect(() => {\r\n    setOnline(socket?.connected);\r\n  }, [socket]);\r\n\r\n  useEffect(() => {\r\n    socket?.on(\"connect\", () => setOnline(true));\r\n  }, [socket]);\r\n\r\n  useEffect(() => {\r\n    socket?.on(\"disconnect\", () => setOnline(false));\r\n  }, [socket]);\r\n\r\n  return {\r\n    socket,\r\n    online,\r\n    conectarSocket,\r\n    desconectarSocket,\r\n  };\r\n};\r\n","import { animateScroll } from \"react-scroll\";\r\n\r\nexport const scrollToBotton = (id) => {\r\n  animateScroll.scrollToBottom({\r\n    containerId: id,\r\n    duration: 0,\r\n  });\r\n};\r\n\r\nexport const scrollToBottonAnimated = (id) => {\r\n  animateScroll.scrollToBottom({\r\n    containerId: id,\r\n    duration: 250,\r\n  });\r\n};\r\n","import React from \"react\";\r\n\r\nexport const ChatSelect = () => {\r\n  return (\r\n    <div className=\"middle-screen\">\r\n      <div className=\"alert-info\">\r\n        <hr />\r\n        <h3>Seleccione una persona</h3>\r\n        <span>Para comenzar una conversacion</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { AuthContext } from \"../auth/AuthContext\";\r\n\r\nexport const Searchbox = () => {\r\n  const { auth, logout } = useContext(AuthContext);\r\n\r\n  return (\r\n    <div className=\"headind_srch\">\r\n      <div className=\"recent_heading mt-2\">\r\n        <h4>{auth.name}</h4>\r\n      </div>\r\n      <div className=\"srch_bar\">\r\n        <div className=\"stylish-input-group\">\r\n          <button className=\"btn text-danger\" onClick={logout}>\r\n            Salir\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { ChatContext } from \"../context/chat/ChatContext\";\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\nimport { scrollToBotton } from \"../helpers/scrollToBotton\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const SidebarChatItem = ({ usuario }) => {\r\n  const { chatState, dispatch } = useContext(ChatContext);\r\n  const { chatActivo } = chatState;\r\n\r\n  const onClick = async () => {\r\n    dispatch({\r\n      type: types.activarChat,\r\n      payload: usuario.uid,\r\n    });\r\n\r\n    //Cargar los mensahes del chat\r\n    const resp = await fetchConToken(`mensajes/${usuario.uid}`);\r\n    dispatch({\r\n      type: types.cargarMensajes,\r\n      payload: resp.mensajes,\r\n    });\r\n\r\n    scrollToBotton(\"mensajes\");\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`chat_list ${usuario.uid === chatActivo && \"active_chat\"}`}\r\n      onClick={onClick}\r\n    >\r\n      {/* active_chat */}\r\n      <div className=\"chat_people\">\r\n        <div className=\"chat_img\">\r\n          <img\r\n            src=\"https://ptetutorials.com/images/user-profile.png\"\r\n            alt=\"sunil\"\r\n          />\r\n        </div>\r\n        <div className=\"chat_ib\">\r\n          <h5>{usuario.nombre}</h5>\r\n          {usuario.online ? (\r\n            <span className=\"text-success\">Online</span>\r\n          ) : (\r\n            <span className=\"text-danger\">Offline</span>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { AuthContext } from \"../auth/AuthContext\";\r\nimport { ChatContext } from \"../context/chat/ChatContext\";\r\nimport { SidebarChatItem } from \"./SidebarChatItem\";\r\n\r\nexport const Sidebar = () => {\r\n  const { chatState } = useContext(ChatContext);\r\n  const { auth } = useContext(AuthContext);\r\n  return (\r\n    <div className=\"inbox_chat\">\r\n      {chatState.usuarios\r\n        .filter((usuario) => usuario.uid !== auth.uid)\r\n        .map((usuario) => (\r\n          <SidebarChatItem key={usuario.uid} usuario={usuario} />\r\n        ))}\r\n\r\n      {/* <!-- Espacio extra para scroll --> */}\r\n      <div className=\"extra_space\"></div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Searchbox } from \"./Searchbox\";\r\nimport { Sidebar } from \"./Sidebar\";\r\n\r\nexport const InboxPeople = () => {\r\n  return (\r\n    <div className=\"inbox_people\">\r\n      <Searchbox />\r\n      <Sidebar />\r\n    </div>\r\n  );\r\n};\r\n","import moment from \"moment\";\r\n\r\nexport const horaMes = (fecha) => {\r\n  const hoyMes = moment(fecha);\r\n  return hoyMes.format(\"HH:mm a | MMMM Do\");\r\n};\r\n","import React from \"react\";\r\nimport { horaMes } from \"../helpers/horaMes\";\r\n\r\nexport const IncomingMessage = ({ msg }) => {\r\n  return (\r\n    <div className=\"incoming_msg\">\r\n      <div className=\"incoming_msg_img\">\r\n        <img\r\n          src=\"https://ptetutorials.com/images/user-profile.png\"\r\n          alt=\"sunil\"\r\n        />\r\n      </div>\r\n      <div className=\"received_msg\">\r\n        <div className=\"received_withd_msg\">\r\n          <p>{msg.mensaje}</p>\r\n          <span className=\"time_date\">{horaMes(msg.createdAt)}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { horaMes } from \"../helpers/horaMes\";\r\n\r\nexport const OutgoingMessages = ({ msg }) => {\r\n  return (\r\n    <div className=\"outgoing_msg\">\r\n      <div className=\"sent_msg\">\r\n        <p>{msg.mensaje}</p>\r\n        <span className=\"time_date\"> {horaMes(msg.createdAt)}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext, useState } from \"react\";\r\nimport { AuthContext } from \"../auth/AuthContext\";\r\nimport { ChatContext } from \"../context/chat/ChatContext\";\r\nimport { SocketContext } from \"../context/SocketContext\";\r\n\r\nexport const SendMessage = () => {\r\n  const [mensaje, setMensaje] = useState(\"\");\r\n  const { auth } = useContext(AuthContext);\r\n  const { socket } = useContext(SocketContext);\r\n  const { chatState } = useContext(ChatContext);\r\n\r\n  const onChage = ({ target }) => {\r\n    setMensaje(target.value);\r\n  };\r\n\r\n  const onSubmite = (e) => {\r\n    e.preventDefault();\r\n    if (mensaje.length === 0) {\r\n      return;\r\n    }\r\n    setMensaje(\"\");\r\n\r\n    //TODO: Emitir un evento de sockets para enviar el mensaje.\r\n    socket.emit(\"mensaje-personal\", {\r\n      de: auth.uid,\r\n      para: chatState.chatActivo,\r\n      mensaje,\r\n    });\r\n    //TODO: hacer el dispatch del mensaje.\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmite} autoComplete=\"off\">\r\n      <div className=\"type_msg row\">\r\n        <div className=\"input_msg_write col-sm-9\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"write_msg\"\r\n            placeholder=\"Mensaje...\"\r\n            value={mensaje}\r\n            onChange={onChage}\r\n            id=\"sendMessages\"\r\n          />\r\n        </div>\r\n        <div className=\"col-sm-3 text-center\">\r\n          <button className=\"msg_send_btn mt-3\" type=\"submit\">\r\n            enviar\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { AuthContext } from \"../auth/AuthContext\";\r\nimport { ChatContext } from \"../context/chat/ChatContext\";\r\nimport { IncomingMessage } from \"./IncomingMessage\";\r\nimport { OutgoingMessages } from \"./OutgoingMessages\";\r\nimport { SendMessage } from \"./SendMessage\";\r\n\r\nexport const Messages = () => {\r\n  const { chatState } = useContext(ChatContext);\r\n  const { auth } = useContext(AuthContext);\r\n\r\n  return (\r\n    <div className=\"mesgs\">\r\n      {/* <!-- Historia inicio --> */}\r\n      <div id=\"mensajes\" className=\"msg_history\">\r\n        {chatState.mensajes.map((msg) =>\r\n          msg.para === auth.uid ? (\r\n            <IncomingMessage key={msg._id} msg={msg} />\r\n          ) : (\r\n            <OutgoingMessages key={msg._id} msg={msg} />\r\n          )\r\n        )}\r\n      </div>\r\n      {/* <!-- Historia Fin --> */}\r\n      <SendMessage />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { ChatSelect } from \"../components/ChatSelect\";\r\nimport { InboxPeople } from \"../components/InboxPeople\";\r\nimport { Messages } from \"../components/Messages\";\r\nimport { ChatContext } from \"../context/chat/ChatContext\";\r\nimport \"../css/chat.css\";\r\n\r\nexport const ChatPage = () => {\r\n  const { chatState } = useContext(ChatContext);\r\n\r\n  return (\r\n    <div className=\"messaging\">\r\n      <div className=\"inbox_msg\">\r\n        <InboxPeople />\r\n        {chatState.chatActivo ? <Messages /> : <ChatSelect />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AuthContext } from \"../auth/AuthContext\";\r\n\r\nexport const LoginPage = () => {\r\n  const { login } = useContext(AuthContext);\r\n\r\n  const [form, setForm] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    rememberme: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const email = localStorage.getItem(\"email\");\r\n    email && setForm((form) => ({ ...form, rememberme: true, email }));\r\n  }, []);\r\n\r\n  const onChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    setForm({\r\n      ...form,\r\n      [name]: value, //las [ ] significa que use el valor del name y no que no lo ponga como propiedad\r\n    });\r\n  };\r\n\r\n  const toggleCheck = () => {\r\n    setForm({\r\n      ...form,\r\n      rememberme: !form.rememberme,\r\n    });\r\n  };\r\n\r\n  const onsubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    form.rememberme\r\n      ? localStorage.setItem(\"email\", form.email)\r\n      : localStorage.removeItem(\"email\");\r\n\r\n    const { email, password } = form;\r\n    const ok = await login(email, password);\r\n    if (!ok) {\r\n      Swal.fire(\"Error\", \"Verifique el usuario y contraseña\", \"error\");\r\n    }\r\n  };\r\n\r\n  const todoOK = () => {\r\n    return form.email.length > 0 && form.password.length > 5 ? true : false;\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className=\"login100-form validate-form flex-sb flex-w\"\r\n      autoComplete=\"off\"\r\n      onSubmit={onsubmit}\r\n    >\r\n      <span className=\"login100-form-title mb-3\">Chat - Ingreso</span>\r\n\r\n      <div className=\"wrap-input100 validate-input mb-3\">\r\n        <input\r\n          className=\"input100\"\r\n          type=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"Email\"\r\n          value={form.email}\r\n          onChange={onChange}\r\n        />\r\n        <span className=\"focus-input100\"></span>\r\n      </div>\r\n\r\n      <div className=\"wrap-input100 validate-input mb-3\">\r\n        <input\r\n          className=\"input100\"\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"Password\"\r\n          value={form.password}\r\n          onChange={onChange}\r\n        />\r\n        <span className=\"focus-input100\"></span>\r\n      </div>\r\n\r\n      <div className=\"row mb-3\">\r\n        <div className=\"col\" onClick={toggleCheck}>\r\n          <input\r\n            className=\"input-checkbox100\"\r\n            id=\"ckb1\"\r\n            type=\"checkbox\"\r\n            name=\"rememberme\"\r\n            checked={form.rememberme}\r\n            readOnly\r\n          />\r\n          <label className=\"label-checkbox100\">Recordarme</label>\r\n        </div>\r\n\r\n        <div className=\"col text-right\">\r\n          <Link to=\"/auth/register\" className=\"txt1\">\r\n            Nueva cuenta?\r\n          </Link>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"container-login100-form-btn m-t-17\">\r\n        <button\r\n          type={\"submit\"}\r\n          className=\"login100-form-btn\"\r\n          disabled={!todoOK()}\r\n        >\r\n          Ingresar\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n","import React, { useContext, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AuthContext } from \"../auth/AuthContext\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport const RegisterPage = () => {\r\n  //\r\n  const { register } = useContext(AuthContext);\r\n\r\n  const [form, setForm] = useState({\r\n    nombre: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const onChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    setForm({\r\n      ...form,\r\n      [name]: value, //las [ ] significa que use el valor del name y no que no lo ponga como propiedad\r\n    });\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const { email, nombre, password } = form;\r\n    const ok = await register(nombre, email, password);\r\n\r\n    if (!ok) {\r\n      Swal.fire(\"Error\", \"Correo ya registrado\", \"error\");\r\n    }\r\n  };\r\n\r\n  const todoOK = () => {\r\n    return form.email.length > 0 &&\r\n      form.password.length > 5 &&\r\n      form.nombre.length > 0\r\n      ? true\r\n      : false;\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={onSubmit}\r\n      className=\"login100-form validate-form flex-sb flex-w\"\r\n      autoComplete=\"off\"\r\n    >\r\n      <span className=\"login100-form-title mb-3\">Chat - Registro</span>\r\n\r\n      <div className=\"wrap-input100 validate-input mb-3\">\r\n        <input\r\n          className=\"input100\"\r\n          type=\"text\"\r\n          name=\"nombre\"\r\n          placeholder=\"Nombre\"\r\n          value={form.nombre}\r\n          onChange={onChange}\r\n        />\r\n        <span className=\"focus-input100\"></span>\r\n      </div>\r\n\r\n      <div className=\"wrap-input100 validate-input mb-3\">\r\n        <input\r\n          className=\"input100\"\r\n          type=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"Email\"\r\n          value={form.email}\r\n          onChange={onChange}\r\n        />\r\n        <span className=\"focus-input100\"></span>\r\n      </div>\r\n\r\n      <div className=\"wrap-input100 validate-input mb-3\">\r\n        <input\r\n          className=\"input100\"\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"Password\"\r\n          value={form.password}\r\n          onChange={onChange}\r\n        />\r\n        <span className=\"focus-input100\"></span>\r\n      </div>\r\n\r\n      <div className=\"row mb-3\">\r\n        <div className=\"col text-right\">\r\n          <Link to=\"auth/login\" className=\"txt1\">\r\n            Ya tienes cuenta?\r\n          </Link>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"container-login100-form-btn m-t-17\">\r\n        <button\r\n          type=\"submit\"\r\n          disabled={!todoOK()}\r\n          className=\"login100-form-btn\"\r\n        >\r\n          Crear cuenta\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { LoginPage } from \"../pages/LoginPage\";\r\nimport { RegisterPage } from \"../pages/RegisterPage\";\r\n\r\nimport \"../css/login-register.css\";\r\n\r\nexport const AuthRouter = () => {\r\n  return (\r\n    <div className=\"limiter\">\r\n      <div className=\"container-login100\">\r\n        <div className=\"wrap-login100 p-t-50 p-b-90\">\r\n          <Switch>\r\n            <Route exact path=\"/auth/login\" component={LoginPage} />\r\n            <Route exact path=\"/auth/register\" component={RegisterPage} />\r\n\r\n            <Redirect to=\"/auth/login\" />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\n\r\nexport const PrivatecRoute = ({\r\n  isAuthenticated,\r\n  component: Component,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props) =>\r\n        isAuthenticated ? <Component {...props} /> : <Redirect to=\"/auth\" />\r\n      }\r\n    />\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\n\r\nexport const PublicRoute = ({\r\n  isAuthenticated,\r\n  component: Component,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props) =>\r\n        !isAuthenticated ? <Component {...props} /> : <Redirect to=\"/\" />\r\n      }\r\n    />\r\n  );\r\n};\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"../auth/AuthContext\";\r\n\r\nimport { ChatPage } from \"../pages/ChatPage\";\r\nimport { AuthRouter } from \"./AuthRouter\";\r\nimport { PrivatecRoute } from \"./PrivateRoute\";\r\nimport { PublicRoute } from \"./PublicRoute\";\r\n\r\nexport const AppRouter = () => {\r\n  const { auth, verificaToken } = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    verificaToken();\r\n  }, [verificaToken]);\r\n\r\n  if (auth.checking) {\r\n    return <h1>Espere por favor...</h1>;\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Switch>\r\n          <PublicRoute\r\n            isAuthenticated={auth.logged}\r\n            path=\"/auth\"\r\n            component={AuthRouter}\r\n          />\r\n          <PrivatecRoute\r\n            exact\r\n            isAuthenticated={auth.logged}\r\n            path=\"/\"\r\n            component={ChatPage}\r\n          />\r\n\r\n          <Redirect to=\"/\" />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { AuthProvider } from \"./auth/AuthContext\";\r\nimport { ChatProvider } from \"./context/chat/ChatContext\";\r\nimport { SocketProvider } from \"./context/SocketContext\";\r\nimport { AppRouter } from \"./router/AppRouter\";\r\n\r\nimport moment from \"moment\";\r\nimport \"moment/locale/es\";\r\nmoment.locale(\"es\");\r\n\r\nexport const ChatApp = () => {\r\n  return (\r\n    <ChatProvider>\r\n      <AuthProvider>\r\n        <SocketProvider>\r\n          <AppRouter />\r\n        </SocketProvider>\r\n      </AuthProvider>\r\n    </ChatProvider>\r\n  );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ChatApp } from \"./ChatApp\";\nimport \"./index.css\";\n\nReactDOM.render(<ChatApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}